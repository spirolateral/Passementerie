#include <CapacitiveSensor.h>

/*Touch-Sensitive Passementerie
 * Jessica Stanley [jstan.co] 2025
 *
 * Control LEDs connected to pin 3 of an Arduino Uno using a capacitive sensor.
 *
 * This sketch is basically a mashup of the following sketches:
 * - CapacitiveSense Library Demo Sketch by Paul Badger (2008) [link]
 * - Smoothing by David Mellis, modified by Tom Igoe (2012) [link]
 */



CapacitiveSensor   cs_9_10 = CapacitiveSensor(9,10);        // 10M resistor between pins 4 & 2, pin 2 is sensor pin, and a passementerie sample with a conductive decorative warp is attached

#define ledPin 3 //we attach and LED passementerie sample to pin 3
int ledValue =0; 
int cappedValue;

//The capacitive sensor data will be noisy so we need to smooth it out by taking a running average
//Set up an array to store averages
const int numReadings = 20;

int readings[numReadings];  // the readings from the analog input
int readIndex = 0;          // the index of the current reading
int total = 0;              // the running total
int average = 0;            // the average

void setup()                    
{
  //Configuring the capacitive sensor
   cs_9_10.set_CS_AutocaL_Millis(0xFFFFFFFF);     // turn off autocalibrate on channel 1 - just as an example
   Serial.begin(9600); //Start writing data to the serial port so we can visualise what's happening
   
   pinMode(ledPin, OUTPUT); //Configure the pin the led is attached to as an output

 // initialize all the readings to 0:
  for (int thisReading = 0; thisReading < numReadings; thisReading++) {
    readings[thisReading] = 0;
  }
}

void loop()                    
{
  //Getting capacitive sensor readings
    long start = millis(); // do we need this?
    long total1 =  cs_9_10.capacitiveSensor(30);

    cappedValue=min(total1,350); //explain this

  //Smoothing
  total = total - readings[readIndex];     // subtract the last reading
  readings[readIndex] = cappedValue;   // read from the sensor
  total = total + readings[readIndex];  // add the reading to the total
  readIndex = readIndex + 1;   // advance to the next position in the array

  if (readIndex >= numReadings) { // if we're at the end of the array...
    readIndex = 0;     // ...wrap around to the beginning
  }

  average = total / numReadings;   // calculate the average:

  //Printing the smoothed value to serial
    Serial.print(350);
    Serial.print("\t");                   
    Serial.print(average);    
    Serial.print("\t");
   
  Serial.println(10);

 //Setting the LED brightness
  ledValue = map(average, 0, 350, 0, 255); //map
  if(ledValue>20){ //more mapping
  analogWrite(ledPin, ledValue); //light the LEDs
  }
  else{
    analogWrite(ledPin,0);
  }

//checking the LED values written to serisl
  Serial.print("led value = ");
  Serial.print('\t');
  Serial.println(ledValue);

    delay(5);                             // arbitrary delay to limit data to serial port 
}
